{".class": "MypyFile", "_fullname": "caesar", "is_partial_stub_package": false, "is_stub": false, "names": {".class": "SymbolTable", "__doc__": {".class": "SymbolTableNode", "kind": "Gdef", "node": {".class": "Var", "flags": ["is_ready"], "fullname": "caesar.__doc__", "name": "__doc__", "type": "builtins.str"}}, "__file__": {".class": "SymbolTableNode", "kind": "Gdef", "node": {".class": "Var", "flags": ["is_ready"], "fullname": "caesar.__file__", "name": "__file__", "type": "builtins.str"}}, "__name__": {".class": "SymbolTableNode", "kind": "Gdef", "node": {".class": "Var", "flags": ["is_ready"], "fullname": "caesar.__name__", "name": "__name__", "type": "builtins.str"}}, "__package__": {".class": "SymbolTableNode", "kind": "Gdef", "node": {".class": "Var", "flags": ["is_ready"], "fullname": "caesar.__package__", "name": "__package__", "type": "builtins.str"}}, "decrypt_caesar": {".class": "SymbolTableNode", "kind": "Gdef", "node": {".class": "FuncDef", "arg_kinds": [0, 0], "arg_names": ["ciphertext", "shift"], "flags": [], "fullname": "caesar.decrypt_caesar", "name": "decrypt_caesar", "type": {".class": "CallableType", "arg_kinds": [0, 0], "arg_names": ["ciphertext", "shift"], "arg_types": ["builtins.str", "builtins.int"], "bound_args": [], "def_extras": {"first_arg": null}, "fallback": "builtins.function", "implicit": false, "is_ellipsis_args": false, "name": "decrypt_caesar", "ret_type": "builtins.str", "variables": []}}}, "encrypt_caesar": {".class": "SymbolTableNode", "kind": "Gdef", "node": {".class": "FuncDef", "arg_kinds": [0, 0], "arg_names": ["plaintext", "shift"], "flags": [], "fullname": "caesar.encrypt_caesar", "name": "encrypt_caesar", "type": {".class": "CallableType", "arg_kinds": [0, 0], "arg_names": ["plaintext", "shift"], "arg_types": ["builtins.str", "builtins.int"], "bound_args": [], "def_extras": {"first_arg": null}, "fallback": "builtins.function", "implicit": false, "is_ellipsis_args": false, "name": "encrypt_caesar", "ret_type": "builtins.str", "variables": []}}}}, "path": "homework01/caesar.py"}